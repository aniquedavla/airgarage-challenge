{"ast":null,"code":"var _jsxFileName = \"/Users/aniquedavla/Projects/airgarage/airgarage-challenge/parking-lots-frontend/parking-lots/src/ParkingLots.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParkingLots({\n  lowestLots\n}) {\n  if (!lowestLots) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Searching for entered city...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: lowestLots && lowestLots.map(lot => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: lot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = ParkingLots;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingLots\");","map":{"version":3,"sources":["/Users/aniquedavla/Projects/airgarage/airgarage-challenge/parking-lots-frontend/parking-lots/src/ParkingLots.js"],"names":["React","ParkingLots","lowestLots","map","lot","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAkC;AAC7C,MAAG,CAACA,UAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACI;AAAA,gBACKA,UAAU,IAAIA,UAAU,CAACC,GAAX,CAAgBC,GAAD,IAAO;AACjC,4BACI;AAAA,iCACI;AAAA,sBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANc;AADnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;AACJ;KAhBuBJ,W","sourcesContent":["import React from 'react';\n\nexport default function ParkingLots({lowestLots}){\n    if(!lowestLots){\n        return(<h1>Searching for entered city...</h1>);\n    } else {\n        return (\n            <div>\n                {lowestLots && lowestLots.map((lot)=>{\n                    return (\n                        <div>\n                            <h1>{lot.name}</h1>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}